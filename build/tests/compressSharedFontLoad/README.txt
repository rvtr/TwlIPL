# ------------------------------------------
# 共有フォント圧縮時のロード速度実験
#
# 作成者 : nishikawa_takeshi
# ------------------------------------------

実験は以下の2ステップから構成されます。

1. 共有フォントの圧縮とインポート
2. ロード速度の測定

以下、各ステップについて説明します。


# ------------------------------------------
# ステップ1  共有フォントの圧縮とインポート
# ------------------------------------------

(1)共有フォントの圧縮

compSharedFont ディレクトリに移動して make してください。
 % cd compSharedFont
 % make

(2)圧縮したフォントのインポート

圧縮された共有フォントを NandInitializerRed でインポートする必要がありますが、
NandInitializerRed は、SDからではなく、ROMアーカイブからインポートします。
(つまり、自身のSRL内部に共有フォントを持ちます。)
そのため、NandInitializerRed を再度、ビルドする必要があります。
圧縮フォントは(1)の処理によって、NandInitializerRed のディレクトリに自動的にコピーされますので、
コピーする必要はありません。

 % cd $(TWL_IPL_RED_ROOT)/build/systemMenu_tools/NandIntializerRed
 % make clean; make

再ビルドされた NandInitializerRed.srl (ARM9.TWL/bin/以下にあります) をSDカードにコピーして、
SDカードブートすると、メニューからフォントをインポートする項目を選択できます。

# ------------------------------------------
# ステップ2  ロード速度の測定
# ------------------------------------------

ロード速度の測定プログラムは、testLoadSpeed ディレクトリにあります。
ここで、OS ライブラリの共有フォント関連の関数を変更し、
されに、TWLSDK を SYSMENU パッケージとしてビルドしなおす必要があります。
これらの変更とテストプログラムのビルドは、make にオプションをつけると自動的に実行されます。
(お好みで、TWL_WITHOUT_DEMOS=TRUE や TWL_FINALROM=TRUE オプションをおつけください。)

  % cd testLoadSpeed
  % make TEST_TWLSDK_REBUILD=TRUE

上記の TWLSDK の変更をしないときには、テストプログラムのビルドが正常にできません。

テストプログラムを変更する場合、毎回 TWLSDK をビルドするのは時間がかかりますので、
オプションをつけずに make すると、テストプログラムのビルドのみ実行します。

  % make

作成されたテストプログラムを実行すれば、圧縮した共有フォントのロード時間を測定できます。
